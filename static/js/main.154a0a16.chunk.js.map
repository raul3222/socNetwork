{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/common/FormsControls/FormsControls.js","api/api.js","redux/dialogsReducer.js","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/assets/images/logo.png","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/common/Preload/831.gif","components/common/Preload/Preload.jsx","components/assets/images/user.png","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/News/News.jsx","utils/objectHelper.js","redux/usersReducer.js","redux/appReducer.js","redux/redux-store.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/hoc/withSuspense.js","App.js","index.js","redux/profileReducer.js","redux/authReducer.js","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","utils/validators/validator.js","components/hoc/withRedirect.js","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css"],"names":["module","exports","FormControl","input","meta","props","hasError","touched","error","className","s","formControl","children","Textarea","restProps","Input","createField","placeholder","name","component","validators","text","validate","instance","axios","baseURL","withCredentials","headers","userAPI","getUsers","currentPage","pageSize","get","then","responce","data","follow","userId","post","unfollow","delete","getUserProfile","console","warn","profileAPI","getUserStatus","updateUserStatus","status","put","authAPI","authMe","loginn","login","passw","rememberMe","email","password","logout","ADD_MESSAGE","initialState","dialogs","id","messages","message","addMessageActionCreator","type","dialogsReducer","state","action","Boolean","window","location","hostname","match","Header","header","src","logo","isAuth","loginView","onClick","to","HeaderContainer","this","React","Component","connect","auth","Navbar","nav","item","activeClassName","activeLink","active","Post","like","maxLength10","maxLengthCreator","MyPostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","required","MyPosts","postElements","posts","map","postsBlock","addPost","Preload","load","ProfileStatusWithHook","useState","editMode","setEditMode","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","profImg","description","ava","photos","small","userStatus","aboutMe","fullName","contacts","facebook","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","params","authorizedUserId","history","push","compose","withRouter","News","updateObjInArray","items","itemId","objPropName","newObjProp","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","users","totalUserCount","isFetching","followingInProgress","followAC","unfollowAC","setUsers","setCurrentPage","setTotalUserCount","toggleIsFetching","isFet","toggleFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profileReducer","dialogsPage","usersPage","authReducer","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Paginator","onPageClick","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","p","cn","selectedPage","pageNumber","Users","user","userPhoto","photo","disabled","some","User","createSelector","getPageSize","getIsFetching","getTotalUserCount","getCurrentPage","getFollowingInProgress","UsersContainer","requestUsers","length","bind","totalCount","withAuthRedirectHoc","withSuspense","Suspense","fallback","DialogsContainer","lazy","Login","Music","Settings","App","initializeApp","path","render","promise","Promise","all","rerenderEntireTree","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","valueFromBll","setUserStatus","postBody","idPost","SET_USER_DATA","SET_LOGIN","setUserData","loginTC","stopSubmit","_error","loginForm","passwForm","remember","maxLength","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.154a0a16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1ztIR\",\"pageNumber\":\"Paginator_pageNumber__2rKOC\",\"selectedPage\":\"Paginator_selectedPage__2wSVD\"};","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nexport const FormControl = ({input, meta, ...props}) =>{\r\n\r\nconst hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n            <div>\r\n            {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport const Textarea = (props) =>{\r\n    const {input, meta, ...restProps} = props;\r\n    return(\r\n        <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) =>{\r\n    const {input, meta, ...restProps} = props;\r\n    return(\r\n        <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props, text=\"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} \r\n        name={name}\r\n        component={component} \r\n        validate={validators}\r\n        {...props}\r\n        /> {text}\r\n        </div>\r\n)","import * as axios from 'axios';\r\nimport {setUserProfile} from '../redux/profileReducer';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers:{\r\n        \"API-KEY\": \"085aacbc-3143-4e7c-b74b-de0140431194\"\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(responce => {\r\n            return responce.data;\r\n        })\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n        .then(responce => responce.data)\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n        .then(responce => responce.data)\r\n    },\r\n    getUserProfile(userId){\r\n        console.warn('Old method. Please use profileAPI');\r\n        return profileAPI.getUserProfile(userId)\r\n\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n        .then(responce =>{\r\n            return responce.data\r\n        });\r\n    },\r\n\r\n    getUserStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n        .then(responce =>{\r\n            return responce.data\r\n        })\r\n    },\r\n    updateUserStatus(status){\r\n        return instance.put('profile/status', {status: status})\r\n        .then(responce =>{\r\n            return responce.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe(){\r\n        return instance.get('auth/me')\r\n    },\r\n    loginn(login, passw, rememberMe){\r\n        return instance.post('auth/login', {email:login, password:passw, rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id:1, name: 'Raul'},\r\n        {id:2, name: 'Nastya'},\r\n        {id:3, name: 'Tima'},\r\n        {id:4, name: 'Emik'},\r\n        {id:5, name: 'Temych'}    \r\n    ],\r\n    messages: [\r\n        {id:1, message: 'Hi'},\r\n        {id:2, message: 'How are you?'},\r\n        {id:3, message: 'YO'}\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) =>{\r\n  \r\n    switch(action.type){\r\n        \r\n        case ADD_MESSAGE:\r\n            return{\r\n                ...state, \r\n                messages: [...state.messages, {id: 4, message: action.message}]   \r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (message) =>{\r\n    return{\r\n        type: ADD_MESSAGE, message\r\n    }\r\n}\r\n\r\n// export const updateMessageActionCreator = (text) =>{ //Это нам больше не нужно. ReduxForm библиотека делает это сама.\r\n//     return{\r\n//         type: UPDATE_MESSAGE,\r\n//         mesUi: text\r\n//     }\r\n// }\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__14D5d\",\"item\":\"Post_item__3oVRH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__NzbO8\",\"item\":\"Navbar_item__2WuAd\",\"activeLink\":\"Navbar_activeLink__3HKFZ\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.98636494.png\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport logo from '../assets/images/logo.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src={logo} />\r\n        <div className={s.login}>\r\n            {props.isAuth? \r\n            <div><span className={s.loginView}>\r\n                {props.login}</span> - <button onClick={props.logout}>Log out</button></div> \r\n                : <NavLink to='/login' >   \r\n                Login\r\n            </NavLink> }\r\n            \r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {setUserData} from '../../redux/authReducer';\r\nimport * as axios from 'axios';\r\nimport { auth, logout} from '../../redux/authReducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n}) \r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n    <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n\r\n \r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n      <div className={s.item}>\r\n        <img src='https://sputnik.kg/images/101808/13/1018081344.jpg'/>\r\n          <div>{props.message}</div>\r\n          <div> like: {props.like}</div>\r\n         \r\n        \r\n        </div>\r\n     \r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validator';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n//import {addPostActionCreator, updatePostActionCreator} from '../../../redux/profileReducer';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst MyPostsForm = (props) =>{\r\n  return(\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name='post' type='text'  validate={[required, maxLength10]}/>\r\n        <button>Add post</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({\r\n  form: 'addPostForm'\r\n})(MyPostsForm);\r\n\r\nconst MyPosts = (props) => {\r\n   let postElements = props.posts.map(posts => <Post message = {posts.message} like = {posts.like}/>);\r\n\r\n   const submit = (data) =>{\r\n      props.addPost(data.post);\r\n      data.post='';\r\n   }\r\n  return (\r\n    <div className={s.postsBlock}>\r\n     <h3>My posts</h3>\r\n        <MyPostsFormRedux onSubmit={submit}/>\r\n      <div className={s.posts}>\r\n       \r\n        {postElements}\r\n \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/831.b15e0bf3.gif\";","import React from 'react';\r\nimport load from './831.gif';\r\nlet Preload =() =>{\r\n    return(\r\n      <img src={load}/>\r\n    )\r\n}\r\n\r\nexport default Preload;","export default __webpack_public_path__ + \"static/media/user.6ce1b8b5.png\";","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n   \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    const activateEditMode = () =>{\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChanged = (e) =>{\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n  \r\n      return(\r\n          <div>\r\n              {!editMode && \r\n              <div>\r\n                  <span onClick={activateEditMode}>{props.status || '---'}</span>\r\n              </div>\r\n              }\r\n              {editMode && \r\n              <div>\r\n                  <input onChange={onStatusChanged} autoFocus='true' onBlur={deactivateEditMode} value={status}/>\r\n              </div>\r\n              }\r\n          </div>\r\n      )\r\n  }\r\n\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport Preload from '../../common/Preload/Preload';\r\nimport s from './ProfileInfo.module.css';\r\nimport ava from '../../assets/images/user.png';\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook'\r\n\r\nconst ProfileInfo = (props) => {\r\n  if(!props.profile){\r\n    return(\r\n      <Preload />\r\n    )\r\n  }\r\n    return (\r\n    <div>\r\n    <div className={s.profImg}>\r\n      <img src='https://searchengineland.com/figz/wp-content/seloads/2019/04/content-people-social-email-whiteboad-ss-1920.jpg' />\r\n    </div>\r\n    <div className={s.description}>\r\n      <div className={s.ava}>\r\n      {props.profile.photos.small?<img src={props.profile.photos.small}/>: <img src={ava}/>}\r\n      </div>\r\n     \r\n      <div>\r\n        <ProfileStatusWithHook status={props.userStatus} updateStatus={props.updateStatus}/>\r\n        <span>{props.profile.aboutMe}</span><br/>\r\n        <span>{props.profile.fullName}</span><br/>\r\n        <span>{props.profile.contacts.facebook}</span><br/>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\n//import Post from './Post/Post';\r\nimport MyPosts from './MyPosts';\r\n//import StoreContext from '../../../StoreContext';\r\nimport {addPostActionCreator, updatePostActionCreator} from '../../../redux/profileReducer';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {\r\n        \r\n//         (store) => {\r\n//           let state = store.getState();\r\n\r\n//           let addPost = () => {\r\n//       store.dispatch(addPostActionCreator());\r\n//           }\r\n       \r\n//           let changePost = (text) => {\r\n//            store.dispatch(updatePostActionCreator(text));\r\n//           }\r\n//           return (\r\n//             <MyPosts\r\n//               updatePostFromBll={changePost}\r\n//               addPost={addPost}\r\n//               posts={state.profilePage.posts}\r\n//               valueFromBll={state.profilePage.valueFromBll} />\r\n//           )\r\n\r\n\r\n\r\n//         }d\r\n//       }\r\n// </StoreContext.Consumer>\r\n//   )\r\n  \r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n  return{\r\n    posts: state.profilePage.posts,\r\n   // valueFromBll: state.profilePage.valueFromBll\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    addPost: (post) => {\r\n      dispatch(addPostActionCreator(post));\r\n    }\r\n    // updatePostFromBll: (text)=>{\r\n    //   dispatch(updatePostActionCreator(text));\r\n    // }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport s from './Profile.module.css';\r\nimport Post from './MyPosts/Post/Post';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n// export let PostsData = [\r\n//   {id:1, message: 'post1', like: 10}, //Перенесли это из МайПостс\r\n//   {id:2, message: 'post2', like: 16}\r\n// ]\r\n//let postElements = props.state.profilePage.posts.map(posts => <Post message = {posts.message} like = {posts.like}/>);\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div className={s.content}>\r\n    <ProfileInfo profile={props.profile} userStatus={props.userStatus} updateStatus={props.updateUserStatus}/>\r\n    <MyPostsContainer \r\n\r\n    />\r\n  </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, setUserStatus, getUserStatus, updateUserStatus} from '../../redux/profileReducer';\r\nimport {Redirect, withRouter} from 'react-router';\r\nimport { userAPI } from '../../api/api';\r\nimport { withAuthRedirectHoc } from '../hoc/withRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId){\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId){\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    // userAPI.getUserProfile(userId)\r\n    // .then(data => {\r\n    //   this.props.setUserProfile(data);\r\n    // });\r\n      this.props.getUserProfile(userId);\r\n      this.props.getUserStatus(userId);\r\n\r\n      \r\n\r\n    // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n    // .then((response) => {\r\n    //     this.props.setUserProfile(response.data);\r\n    // });\r\n  }\r\n\r\n render(){\r\n   return(\r\n     <Profile {...this.props}/>\r\n   )\r\n }  \r\n}\r\n\r\nlet mapStateToProps = (state) =>({\r\n  profile: state.profilePage.profile,\r\n  userStatus: state.profilePage.userStatus,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\n\r\n// let withAuthRedirect = withAuthRedirectHoc(ProfileContainer);\r\n\r\n// let WithUrlComponent = withRouter(withAuthRedirect);\r\n\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlComponent);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n  withRouter,\r\n // withAuthRedirectHoc\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","\r\nexport const updateObjInArray = (items, itemId, objPropName, newObjProp) =>{\r\ndebugger;\r\n   return items.map(u => {\r\n        if(u[objPropName] === itemId){\r\n          return {...u, ...newObjProp}\r\n        }\r\n        return u;\r\n    })\r\n}","import { userAPI } from \"../api/api\";\r\nimport { updateObjInArray } from \"../utils/objectHelper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE  = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUserCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n};\r\nconst usersReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case FOLLOW:\r\n          return{\r\n            ...state, \r\n            users: updateObjInArray(state.users, action.userId, \"id\", {followed: true})\r\n            // users: state.users.map(u => {\r\n            //     if(u.id === action.userId)\r\n            //       return {...u, followed: true}\r\n\r\n            //     return u;\r\n            // })\r\n          }   \r\n        case UNFOLLOW:\r\n          return{\r\n            ...state, \r\n            users: updateObjInArray(state.users, action.userId, \"id\", {followed: false})\r\n            // users: state.users.map(u =>{\r\n            //   if(u.id === action.userId)\r\n            //       return {...u, followed: false}\r\n\r\n            //   return u;\r\n            // })\r\n          }\r\n        case SET_USERS:\r\n          return{...state, users: action.users} \r\n                                                                    \r\n        case SET_CURRENT_PAGE:\r\n          return{...state, currentPage: action.currentPage}   \r\n\r\n        case SET_TOTAL_USER_COUNT:\r\n          return {...state, totalUserCount: action.totalUserCount} \r\n\r\n        case TOGGLE_IS_FETCHING:\r\n          return{...state, isFetching: action.isFetching}  \r\n\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n          return {...state, \r\n            followingInProgress: action.isFet\r\n            ? [...state.followingInProgress, action.userId]\r\n            : state.followingInProgress.filter(id => id !== action.userId )\r\n\r\n          }   \r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (userId) => {\r\n    return {\r\n      type: FOLLOW,\r\n      userId\r\n    }\r\n  }\r\nexport const unfollowAC = (userId) =>{\r\n    return {\r\n      type: UNFOLLOW,\r\n      userId\r\n    }\r\n  }\r\nexport const setUsers = (users) => {\r\n  return{\r\n    type: SET_USERS,\r\n    users\r\n  }\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n  return{\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n  }\r\n}\r\nexport const setTotalUserCount = (totalUserCount)=>{\r\n  return{\r\n    type: SET_TOTAL_USER_COUNT, totalUserCount\r\n  }\r\n}\r\nexport const toggleIsFetching = (isFet)=>{\r\n  return{\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFet\r\n  }\r\n}\r\nexport const toggleFollowingInProgress = (isFet, userId) =>{\r\n  return {\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    isFet, userId\r\n  }\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) =>{\r\n  return (dispatch) =>{\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n     userAPI.getUsers(currentPage, pageSize)\r\n    .then((data) => {\r\n       dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUserCount(data.totalCount));\r\n    });\r\n  }\r\n}\r\n\r\nconst followUnfollowFlow = async(dispatch, userId, apiMethod, actionCreator) => { //одинаковую логику из follow и unfollow санок вынес в отдельную ф-цию\r\n  dispatch(toggleFollowingInProgress(true, userId)); \r\n    let data = await apiMethod(userId)\r\n        if(data.resultCode === 0){\r\n            dispatch(actionCreator(userId)) \r\n        }\r\n        dispatch(toggleFollowingInProgress(false, userId));\r\n}\r\n\r\nexport const unfollow = (userId) => {  //санка\r\n  return async (dispatch) =>{\r\n    let apiMethod = userAPI.unfollow.bind(userId);\r\n    followUnfollowFlow(dispatch, userId, apiMethod, unfollowAC);\r\n  }\r\n}\r\n\r\nexport const follow = (userId) => {  //санка\r\n  return async (dispatch) =>{\r\n    followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userId), followAC);\r\n  }\r\n}\r\nexport default usersReducer;","import axios from \"axios\";\r\nimport { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\nimport {auth} from './authReducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n//Смотри в dialogReducer короткую запись копирования state-a\r\nconst appReducer = (state = initialState, action) =>{\r\n\r\n    switch(action.type){\r\n        case INITIALIZED_SUCCESS:\r\n          return {\r\n            ...state, \r\n            initialized: true       \r\n          }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSucess = () => {\r\n    return {\r\n      type: INITIALIZED_SUCCESS\r\n    }\r\n  }\r\n \r\n  export const initializeApp = () =>{\r\n    return (dispatch) => {\r\n      \r\n   let promise = dispatch(auth());\r\n\r\n    Promise.all([promise])\r\n    .then(()=> {\r\n      dispatch(initializedSucess())\r\n    });\r\n\r\n      \r\n    }\r\n  }\r\n\r\n \r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware)); \r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport { userAPI } from '../../../api/api';\r\nimport cn from 'classnames';\r\nlet Paginator = ({totalUserCount, pageSize, currentPage, onPageClick, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n    \r\n    return <div>\r\n        {portionNumber > 1 && \r\n            <button onClick={() => {setPortionNumber(portionNumber-1)}}>PREV </button> }\r\n\r\n        {pages\r\n            .filter(p=> p>=leftPortionPageNumber && p<=rightPortionNumber)\r\n            .map(p => {\r\n                return <span className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                    key = {p}\r\n                onClick={(e) => {onPageClick(p) }}>{p}</span> \r\n                \r\n                    \r\n                    //className={currentPage === p && s.selectedPage}>{p}</span>\r\n            })}\r\n        \r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n            \r\n        </div>\r\n        \r\n}\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport { userAPI } from '../../api/api';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\nlet Users = (props) => {\r\n    //let u = props.user;\r\n    let { user } = props;\r\n    return(\r\n        <div>\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/'+ user.id}>\r\n                    <img src={user.photos.small ? user.photos.small : userPhoto} className={s.photo} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed ?\r\n                        <button disabled={props.followingInProgress.some(id => id===user.id)} onClick={() => { \r\n                         props.unfollow(user.id);\r\n                        }}>unfollow</button> :\r\n                        <button disabled={props.followingInProgress.some(id => id===user.id)} onClick={() => { \r\n                            props.follow(user.id);\r\n                           }\r\n                            }>follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </span>\r\n            </span>\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Users;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport { userAPI } from '../../api/api';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            <Paginator\r\n                totalUserCount={props.totalUserCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onPageClick={props.onPageClick}\r\n               />\r\n           <div>\r\n            {props.users.map(u =>\r\n                <User\r\n                    user={u}\r\n                    followingInProgress={props.followingInProgress}\r\n                    follow={props.follow}\r\n                    unfollow={props.unfollow}\r\n                    key={u.id} //Не понимаю зачем это нужно\r\n                />)}\r\n                </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) =>{\r\n   return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users)=>{\r\n     return users.filter(u => true);   //В данном случае, бесполезное действие. Наглядно показывает работу библиотеки reselect.\r\n});\r\n\r\n\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.usersPage.pageSize;\r\n }\r\n\r\n export const getIsFetching = (state) =>{\r\n    return state.usersPage.isFetching;\r\n }\r\n export const getTotalUserCount = (state) =>{\r\n    return state.usersPage.totalUserCount;\r\n }\r\n export const getCurrentPage = (state) =>{\r\n    return state.usersPage.currentPage;\r\n }\r\n\r\n export const getFollowingInProgress = (state) =>{\r\n    return state.usersPage.followingInProgress;\r\n }\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport store from '../../redux/redux-store';\r\nimport Users from './Users';\r\nimport * as axios from 'axios';\r\nimport Preload from '../common/Preload/Preload'\r\nimport { unfollow, follow, setUsers, setCurrentPage, setTotalUserCount, toggleIsFetching, toggleFollowingInProgress, requestUsers } from '../../redux/usersReducer';\r\nimport {getUsers, getPageSize, getTotalUserCount, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/usersSelectors';\r\nimport { withAuthRedirectHoc } from '../hoc/withRedirect';\r\nimport {compose} from 'redux';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.users.length === 0) {\r\n           \r\n            this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n    onPageClick = (pageNumber) => {\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true);           Проверить на работе!!!!\r\n        // userAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then((data) => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //     });\r\n\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.props.isFetching ? <Preload/> : null}\r\n           <Users \r\n           onPageClick={this.onPageClick}\r\n           currentPage={this.props.currentPage}\r\n           totalUserCount={this.props.totalUserCount}\r\n           pageSize={this.props.pageSize}\r\n           follow={this.props.follow}\r\n           unfollow={this.props.unfollow}\r\n           users={this.props.users}\r\n           followingInProgress={this.props.followingInProgress}\r\n           toggleFollowingInProgress = {this.props.toggleFollowingInProgress}\r\n\r\n           />\r\n           </>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state), \r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n// let mapStateToProps = (state) => {\r\n//     return{\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUserCount: state.usersPage.totalUserCount,\r\n//         currentPage: state.usersPage.currentPage, \r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return{\r\n//         follow: (userId) =>{\r\n//             dispatch(followAC(userId));\r\n//         },\r\n//         unfollow: (userId) =>{\r\n//             dispatch(unfollowAC(userId));\r\n//         },\r\n//         setUsers: (users)=>{\r\n//             dispatch(setUsersAC(users)); \r\n//         },\r\n//         setCurrentPage: (pageNumber)=>{\r\n//             dispatch(setCurrentPageAC(pageNumber));\r\n//         },\r\n//         setTotaUserCount: (totalUserCount)=>{\r\n//             dispatch(setTotalUserCountAC(totalUserCount));\r\n//         },\r\n//         toggleIsFetching: (isFetching)=>{\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{follow, unfollow, setUsers, setCurrentPage, \r\n        setTotalUserCount, toggleIsFetching, toggleFollowingInProgress, requestUsers}),\r\n    withAuthRedirectHoc\r\n)(UsersContainer)\r\n\r\n// export default connect(mapStateToProps,{follow, unfollow, setUsers, setCurrentPage, \r\n//     setTotalUserCount, toggleIsFetching, toggleFollowingInProgress, getUsers})(UsersContainer);\r\n\r\n//export default UsersContainer;","import React from 'react';\r\n\r\n\r\nexport const  withSuspense = (Component) =>{\r\n    \r\n   \r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props}/>\r\n      </React.Suspense>\r\n    };\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n//import Dialogs from './components/Dialogs/Dialogs';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport News from './components/News/News';\r\n// import Music from './components/Music/Music'\r\n// import Settings from './components/Settings/Settings';\r\n// import DialogsContainer from './components/Dialogs/DialogsContainer'; //сделали эту компоненту lazy\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport { Route} from 'react-router-dom';\r\n// import Login from './components/Login/Login'; // Тоже выносим в lazy\r\nimport {connect} from 'react-redux';\r\nimport {initializeApp} from './redux/appReducer';\r\nimport Preload from './components/common/Preload/Preload';\r\nimport { withSuspense } from './components/hoc/withSuspense';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\nconst Music = React.lazy(() => import('./components/Music/Music'));\r\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount(){\r\n    this.props.initializeApp();\r\n  }\r\n\r\n\r\n  render(){\r\n    if(!this.props.initialized){\r\n     return <Preload />\r\n    }\r\n\r\n    return (\r\n    <div className='app-wrapper'>\r\n      <HeaderContainer />\r\n      <Navbar />\r\n      <div className='app-wrapper-content'>\r\n       {/* <Route path='/profile' component={Profile}/>\r\n       <Route path='/dialogs' component={Dialogs}/> */}\r\n      \r\n       <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n       <Route path='/users' render={() => <UsersContainer />}/>\r\n       \r\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\r\n          \r\n\r\n          {/* <Route path='/login' render={() => <Login />}/>  //это старый рендер. Теперь использую lazy*/}\r\n          <Route path='/login' render={withSuspense(Login)} />\r\n    \r\n{/*        \r\n       <Route path='/profile' render={() => <Profile state={props.state}/>}/>\r\n       <Route path='/dialogs' render={() => <Dialogs state={props.state}/>}/>\r\n       */}\r\n       <Route path='/news' component={News}/>\r\n          {/* <Route path='/music' component={Music}/> */}\r\n          <Route path='/music' render={withSuspense(Music)} />\r\n          {/* <Route path='/settings' component={Settings}/> */}\r\n          <Route path='/settings' render={withSuspense(Settings)} />\r\n       \r\n      </div>\r\n    </div>\r\n  \r\n  )\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\nexport default connect(mapStateToProps, {initializeApp})(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport store from './redux/redux-store';\r\nimport  {Provider}  from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n//import {addPost, updatePostFromBll,subscribe} from './redux/state';\r\n\r\n//ReactDOM.render(<App state={state} dispatch={store.dispatch.bind(store)} store={store}/>, document.getElementById('root'));\r\n\r\nlet rerenderEntireTree = (state) =>{\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>, document.getElementById('root'));\r\n    \r\n} \r\n\r\nrerenderEntireTree(store.getState());\r\n\r\nstore.subscribe(() =>{\r\n    rerenderEntireTree(store.getState());\r\n});\r\n//ReactDOM.render(<App posts={postsData} dialogs={dialogsData} messages={messagesData}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { profileAPI, userAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_POST = 'UPDATE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id:1, message: 'post1', like: 10}, \r\n    {id:2, message: 'post2', like: 16}\r\n  ],\r\n  valueFromBll: '',\r\n  profile: null,\r\n  userStatus: ''\r\n};\r\n//Смотри в dialogReducer короткую запись копирования state-a\r\nconst profileReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case ADD_POST:{\r\n          let postBody = action.post;\r\n         return{\r\n           ...state, posts: [...state.posts, {id:3, message:postBody, like:0}] \r\n         }}\r\n         \r\n         \r\n        \r\n        // case UPDATE_POST:\r\n        //   {\r\n        //     let copyState = {...state};\r\n        //    updatePostFromBll(copyState, action.valueFromUi);\r\n        //     return copyState;}\r\n        case SET_USER_PROFILE:\r\n          return{...state, profile: action.profile}\r\n        case SET_USER_STATUS:\r\n          return {...state, userStatus: action.status}\r\n        case DELETE_POST:\r\n            return{...state, posts: state.posts.filter(p=> p.id != action.idPost)}\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n// let addPost = (post) => {\r\n//     let newPost = {\r\n//         id: 3,\r\n//         message: post,\r\n//         like: 1\r\n//     }\r\n//     return newPost;\r\n    \r\n//     //state.posts.push(newPost);\r\n//     //state.valueFromBll='';\r\n    \r\n//    // this.rerenderEntireTree(state.state);\r\n// }\r\n\r\n//   let updatePostFromBll= (state, valueFromUi) => {\r\n     \r\n//    state.valueFromBll = valueFromUi;\r\n  \r\n//     //this.rerenderEntireTree(this._state);\r\n// }\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n      type: SET_USER_STATUS, status\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (post) => {\r\n    return {\r\n      type: ADD_POST, post\r\n    }\r\n  }\r\nexport const deletePost = (idPost) =>{\r\n    return{\r\n      type: DELETE_POST, idPost\r\n    }\r\n}\r\nexport const updatePostActionCreator = (text) =>{\r\n    return {\r\n      type: UPDATE_POST,\r\n      valueFromUi: text\r\n    }\r\n  }\r\n  export const setUserProfile = (profile) =>{\r\n    return{\r\n      type:SET_USER_PROFILE,\r\n      profile\r\n    }\r\n  }\r\n\r\n export const getUserProfile = (userId) => {\r\n   return async (dispatch) => {\r\n   let data = await userAPI.getUserProfile(userId)\r\n    \r\n      dispatch(setUserProfile(data));\r\n   }\r\n }\r\n\r\n export const getUserStatus = (userId) => {\r\n  return (dispatch) => {\r\n   profileAPI.getUserStatus(userId)  // Здесь использую then с промисом. Выше использую await. код выше короче\r\n   .then(data => {\r\n     \r\n     dispatch(setUserStatus(data));\r\n   });\r\n  }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n  return (dispatch) => {\r\n   profileAPI.updateUserStatus(status)\r\n   .then(data => {\r\n     if(data.resultCode===0)\r\n     dispatch(setUserStatus(status));\r\n   });\r\n  }\r\n}\r\nexport default profileReducer;","import axios from \"axios\";\r\nimport { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_LOGIN = 'SET_LOGIN';\r\n\r\n\r\nlet initialState = {\r\n  userId: null, \r\n  login: null, \r\n  email: null,\r\n  isAuth: false,\r\n  // loginForm: '',\r\n  // passwForm: '',\r\n  rememberMe: false\r\n};\r\n//Смотри в dialogReducer короткую запись копирования state-a\r\nconst authReducer = (state = initialState, action) =>{\r\n\r\n    switch(action.type){\r\n        case SET_USER_DATA:\r\n          return {\r\n            ...state, \r\n            ...action.data       \r\n          }\r\n        case SET_LOGIN:\r\n          return {...state, loginForm:action.login, passwForm: action.passw, remember: action.rememberMe}\r\n             \r\n    \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId, login, email, isAuth) => {\r\n    return {\r\n      type: SET_USER_DATA, \r\n      data:{userId, login, email, isAuth}\r\n    }\r\n  }\r\n  // export const setLogin = (login, passw, rememberMe) => {\r\n  //   return {\r\n  //     type: SET_LOGIN, \r\n  //     login, passw, rememberMe\r\n  //   }\r\n  // }\r\n\r\n  export const auth = () =>{\r\n    return (dispatch) => {\r\n    return  authAPI.authMe()\r\n        .then((responce) => {\r\n            if(responce.data.resultCode===0){\r\n                let {id, login, email} = responce.data.data;\r\n                dispatch(setUserData(id, login, email, true)); \r\n            }\r\n        })\r\n    }\r\n  }\r\n\r\n  export const loginTC = (login, passw, rememberMe) =>{\r\n    \r\n    return (dispatch) => {\r\n      \r\n \r\n      authAPI.loginn(login, passw, rememberMe)\r\n        .then((responce) => {\r\n            if(responce.data.resultCode===0){\r\n               // dispatch(setLogin(login, passw, rememberMe)); \r\n               dispatch(auth());\r\n            }\r\n            else{\r\n              let message = responce.data.messages.length > 0 ? responce.data.messages[0] : ''\r\n              dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n        })\r\n    }\r\n  }\r\n\r\n  export const logout = () =>{\r\n  \r\n    return (dispatch) => {\r\n      authAPI.logout()\r\n        .then((responce) => {\r\n          //debugger\r\n            if(responce.data.resultCode===0){\r\n               // dispatch(setLogin(login, passw, rememberMe)); \r\n               dispatch(setUserData(null, null, null, false));\r\n               //dispatch(auth());\r\n            }\r\n        })\r\n    }\r\n  }\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2agfi\",\"login\":\"Header_login__2LpjR\",\"loginView\":\"Header_loginView__26GqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profImg\":\"ProfileInfo_profImg__3gT6a\",\"description\":\"ProfileInfo_description__1T79U\",\"ava\":\"ProfileInfo_ava__a_x-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2pGNe\"};","export const required = (value) =>{\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength) return `Max lenght is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const  withAuthRedirectHoc = (Component) =>{\r\n\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2ytOr\",\"error\":\"FormsControls_error__2emMY\",\"formError\":\"FormsControls_formError__2_Oxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__23JRj\",\"selectedPage\":\"Users_selectedPage__27f_v\"};"],"sourceRoot":""}